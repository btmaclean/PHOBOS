#!/usr/local/bin/python

#-------------- PHOBOS ---------------------------#
#-- Phobos will determine spectroscopic parameters based on the EWs in the moog_input file.
#-- Required subscripts for Phobos to run are fe_phobos, parameter_phobos, elementa;_phobos, model_phobos, and moog_phobos. Please ensure all 4 scripts are in $PATH, as Phobos will call them from the working directory.

#-- Load modules that may be required.
import numpy as np
import os
import shutil
import sys
import subprocess
import math
from scipy import stats
from functions_phobos import moog
from functions_phobos import model
from functions_phobos import ares
from functions_phobos import psum
from functions_phobos import create_photom_params
from functions_phobos import pyclean
from functions_phobos import purge
from functions_phobos import photoreplace
from functions_phobos import deletestar
from functions_phobos import X_lines_summary

scriptloc = os.path.dirname(sys.argv[0])
print scriptloc
#print "THIS IS EDITED!!!!!"

cluster = raw_input('\nPlease specify which cluster you would like to Phobos [m4][6397]: ')
if cluster.lower() == 'm4':
	print '\nCluster: Messier 4'
	with open('/Users/macleanb/observational_software/scripts/phobos/user_variables.py', 'w') as user_var:
		user_var.write('#!/usr/local/bin/python\n'\
		'\n'\
		'#--------------- USER VARIABLES ------------------#\n'\
		'\n'\
		'#-------------------------------------------------#\n'\
		'#--------------- USER TO DEFINE ------------------#\n'\
		'#-- Define location of analysis directory.\n'\
		'location = "/Users/macleanb/data/m4/m4_members/analysis"\n'\
		'#-- Define the two linelist files.\n'\
		'linelist_fe = "/Users/macleanb/data/line_lists/fe_short.lines"\n'\
		'linelist_elements = "/Users/macleanb/data/line_lists/nao.lines"\n'\
		'#-- Choose prefered text editor launch command (e.g. gedit)\n'\
		'texteditor = "mate"\n'\
		'#-- Set initial estimate for metallicity ([Fe/H])\n'\
		'fe_h = -1.15\n'\
		'#-- Define distance modulus of cluster\n'\
		'dist_mod = 12.82\n'\
		'#-- Define colour scale in photometry (options: BV, VJ, VK, VH, by)\n'\
		'colour_scale = "VK"\n'\
		'#--------------- USER TO DEFINE ------------------#\n'\
		'#-------------------------------------------------#')
elif cluster.lower() == '6397':
	print '\nCluster: NGC 6397'
	with open('/Users/macleanb/observational_software/scripts/phobos/user_variables.py', 'w') as user_var:
		user_var.write('#!/usr/local/bin/python\n'\
		'\n'\
		'#--------------- USER VARIABLES ------------------#\n'\
		'\n'\
		'#-------------------------------------------------#\n'\
		'#--------------- USER TO DEFINE ------------------#\n'\
		'#-- Define location of analysis directory.\n'\
		'location = "/Users/macleanb/data/ngc6397/analysis"\n'\
		'#-- Define the two linelist files.\n'\
		'linelist_fe = "/Users/macleanb/data/line_lists/fe_short.lines"\n'\
		'linelist_elements = "/Users/macleanb/data/line_lists/nao.lines"\n'\
		'#-- Choose prefered text editor launch command (e.g. gedit)\n'\
		'texteditor = "mate"\n'\
		'#-- Set initial estimate for metallicity ([Fe/H])\n'\
		'fe_h = -2.02\n'\
		'#-- Define distance modulus of cluster\n'\
		'dist_mod = 12.37\n'\
		'#-- Define colour scale in photometry (options: BV, VJ, VK, VH, by)\n'\
		'colour_scale = "VK"\n'\
		'#--------------- USER TO DEFINE ------------------#\n'\
		'#-------------------------------------------------#')
elif cluster.lower() == 'fab':
	print '\nCluster: M4'
	with open('/Users/macleanb/observational_software/scripts/phobos/user_variables.py', 'w') as user_var:
		user_var.write('#!/usr/local/bin/python\n'\
		'\n'\
		'#--------------- USER VARIABLES ------------------#\n'\
		'\n'\
		'#-------------------------------------------------#\n'\
		'#--------------- USER TO DEFINE ------------------#\n'\
		'#-- Define location of analysis directory.\n'\
		'location = "/Users/macleanb/data/m4/fabiola"\n'\
		'#-- Define the two linelist files.\n'\
		'linelist_fe = "/Users/macleanb/data/line_lists/fe_short.lines"\n'\
		'linelist_elements = "/Users/macleanb/data/line_lists/nao.lines"\n'\
		'#-- Choose prefered text editor launch command (e.g. gedit)\n'\
		'texteditor = "mate"\n'\
		'#-- Set initial estimate for metallicity ([Fe/H])\n'\
		'fe_h = -1.15\n'\
		'#-- Define distance modulus of cluster\n'\
		'dist_mod = 12.82\n'\
		'#-- Define colour scale in photometry (options: BV, VJ, VK, VH, by)\n'\
		'colour_scale = "VK"\n'\
		'#--------------- USER TO DEFINE ------------------#\n'\
		'#-------------------------------------------------#')
else:
	cluster = 'm4'
	pyclean(scriptloc)
	sys.exit('\nUnknown cluster, please add details to:\n{}/user_variables.py\nand options to:\n{}/phobos'.format(scriptloc,scriptloc))

#-- Load use defined variables: location, linelists and text editor.
execfile('{}/user_variables.py'.format(scriptloc))

if not os.path.exists('{}'.format(location)):
	pyclean(scriptloc)
	sys.exit('\nAnalysis directory {} does not exist!'.format(location))
if not os.path.exists('{}'.format(linelist_fe)):
	pyclean(scriptloc)
	sys.exit('\nIron line list {} does not exist!'.format(linelist_fe))
if not os.path.exists('{}'.format(linelist_elements)):
	pyclean(scriptloc)
	sys.exit('\nElemental line list {} does not exist!'.format(linelist_elements))
try:
	fe_h + 1
except:
	pyclean(scriptloc)
	sys.exit('\nCluster metallicity ([Fe/H]) must be a float.')

print '\n[Fe/H] ~ {}'.format(fe_h)
print 'M-m = {}'.format(dist_mod)
print 'Analysis directory: {}'.format(location)

print '\nPhobos code files: {}'.format(scriptloc)
print 'Iron line list: {}'.format(linelist_fe)
print 'Elemental line list: {}'.format(linelist_elements)
print 'Text Editor: {}'.format(texteditor)
print 'Photometry colour: {}'.format(colour_scale)


#-- Go to analysis directory.
os.chdir(location)

#-- Check for /fits and photometry.txt in analysis directory, and exit if not found.
#if not os.path.exists('{}/fits'.format(location)):
#	pyclean(scriptloc)
#	sys.exit('\n"/fits" folder does not exist in Analysis directory! Exiting Phobos.'.format(linelist_elements))

#if not os.path.exists('{}/photometry.txt'.format(location)):
#	pyclean(scriptloc)
#	sys.exit('\n"photometry.txt" does not exist in Analysis directory! Exiting Phobos.'.format(linelist_elements))

#-- Create photometric parameter list if it doesn't exist yet.
#if not os.path.exists('photo.params'):
#	print 'Creating photo.params from photometry.txt'
#	create_photom_params(location,fe_h,dist_mod,colour_scale)

#-- Create spectroscopic parameter list if it doesn't exist yet.
#if not os.path.exists('spectro.params'):
#	print 'Creating spectro.params from photo.params'
#	shutil.copy('photo.params','spectro.params')

#-- Ask user which star to use (ie. 1-50).
star = raw_input('\nPlease specify which number star you would like to Phobos (i.e. 1 to n, where n is the total number of stars): ')
if star.lower() == 'purge':
	operation = raw_input('\nAre you sure? [y/N] ')
	if operation.lower().startswith('y'):
		operation = raw_input('\nPlease type PURGE (in capitals) to completely purge analysis directory (excluding /fits and /backups folders and photo.params file). ')
		if operation == 'PURGE':
			print '\nYour funeral, buddy.'
			purge(location)
			pyclean(scriptloc)
			sys.exit('\nAnalysis directory ({}) purged of all Phobos activity (excluding /backups folder). /fits folder and photo.params file still exist. ')
		else:
			pyclean(scriptloc)
			sys.exit('\nExiting Phobos. Did NOT purge.')
	else:
		pyclean(scriptloc)
		sys.exit('\nExiting Phobos')
try:
	int(star)
except:
	pyclean(scriptloc)
	sys.exit('\nSelection must be an integer.')
star = int(star)

#-- Because arrays are stupid and start at zero.
arrayelement = star - 1
	
#-- Read spectro.params as numpy array and use only the details of the star as user defined.
params = np.genfromtxt('spectro.params',dtype=None)
name = params[arrayelement][0]
Teff = int(params[arrayelement][1])
logg = params[arrayelement][2]
xi = params[arrayelement][3]
Vmag = params[arrayelement][4]

#-- Ask user what to do.
operation = raw_input('\nWhat would you like to do?\n Fe analysis [f],\n Spectroscopic parameter analysis [p],\n Elemental abundance determination [e],\n Make a new model [m],\n Delete a stellar analysis [del], or\n Purge analysis folder [PURGE]?\n ')

if operation.lower().startswith('f'):
	print '\nRunning Fe-Phobos.'
	feelements = 'fe'
	execfile('{}/fe_phobos.py'.format(scriptloc))
elif operation.lower() == 'p':
	print '\nRunning Parameter-Phobos.'
	feelements = 'fe'
	execfile('{}/parameter_phobos_new.py'.format(scriptloc))
elif operation.lower().startswith('e'):
	print '\nRunning Elemental-Phobos.'
	feelements = 'elements'
	execfile('{}/elemental_phobos.py'.format(scriptloc))
elif operation.lower().startswith('m'):
	operation = raw_input('\nRemake spectroscopic model [s] or reset to parameters to photometric [p]? ')
	if operation.lower().startswith('s'):
		model(name,location,Teff,logg,xi,fe_h)
		pyclean(scriptloc)
		feelements = 'fe'
		if os.path.exists('{}/moog_input/{}.{}.lines'.format(location,name,feelements)):
			plotornot = 1
			moog(star,name,feelements,location,plotornot)
		sys.exit('\nNew spectroscopic model created for {n} (star {s}).'.format(n=name,s=star))
	elif operation.lower().startswith('p'):
		photoreplace(name,location,Teff,logg,xi,fe_h,arrayelement)
		pyclean(scriptloc)
		feelements = 'fe'
		if os.path.exists('{}/moog_input/{}.{}.lines'.format(location,name,feelements)):
			plotornot = 1
			moog(star,name,feelements,location,plotornot)
		sys.exit('\nParameters for {n} (star {s}) reset to photometric, new model created.'.format(n=name,s=star))
	else:
		pyclean(scriptloc)
		sys.exit('\nNot a selection')
elif operation.lower().startswith('del'):
	operation = raw_input('\nDelete parameter/fe files [f][p], elemental files [e] or all files [a]? ')
	if operation.lower().startswith('f'):
		operation = raw_input('\nAre you sure? [y/N] ')
		if operation.lower().startswith('y'):
			feelements = 'fe'
			deletestar(Teff,logg,xi,fe_h,name,location,feelements,star,arrayelement)
			pyclean(scriptloc)
			sys.exit('\nAll Fe analysis files for {n} (star {s}) have been deleted and parameters reset to photometric. Backup {n}.fe.lines and {n}.fits files still exist.'.format(n=name,s=star))
		else:
			pyclean(scriptloc)
			sys.exit('\nExiting Phobos')
	if operation.lower().startswith('p'):
		operation = raw_input('\nAre you sure? [y/N] ')
		if operation.lower().startswith('y'):
			feelements = 'fe'
			deletestar(Teff,logg,xi,fe_h,name,location,feelements,star,arrayelement)
			pyclean(scriptloc)
			sys.exit('\nAll Fe analysis files for {n} (star {s}) have been deleted and parameters reset to photometric. Backup {n}.fe.lines and {n}.fits files still exist.'.format(n=name,s=star))
		else:
			pyclean(scriptloc)
			sys.exit('\nExiting Phobos')
	if operation.lower().startswith('e'):
		operation = raw_input('\nAre you sure? [y/N] ')
		if operation.lower().startswith('y'):
			feelements = 'elements'
			deletestar(Teff,logg,xi,fe_h,name,location,feelements,star,arrayelement)
			pyclean(scriptloc)
			sys.exit('\nAll elemental analysis files for {n} (star {s}) have been deleted. Backup {n}.elements.lines and {n}.fits files still exist.'.format(n=name,s=star))
		else:
			pyclean(scriptloc)
			sys.exit('\nExiting Phobos')
	if operation.lower().startswith('a'):
		operation = raw_input('\nAre you sure? [y/N] ')
		if operation.lower().startswith('y'):
			feelements = 'fe'
			deletestar(Teff,logg,xi,fe_h,name,location,feelements,star,arrayelement)
			feelements = 'elements'
			deletestar(Teff,logg,xi,fe_h,name,location,feelements,star,arrayelement)
			pyclean(scriptloc)
			sys.exit('\nAll analysis files for {n} (star {s}) have been deleted and parameters reset to photometric. Backup {n}.fe/elements.lines and {n}.fits files still exist.'.format(n=name,s=star))
		else:
			pyclean(scriptloc)
			sys.exit('\nExiting Phobos')
	else:
		pyclean(scriptloc)
		sys.exit('\nNot a selection')
elif operation.lower() == 'purge':
	operation = raw_input('\nAre you sure? [y/N] ')
	if operation.lower().startswith('y'):
		operation = raw_input('\nPlease type PURGE (in capitals) to completely purge analysis directory (excluding /fits and /backups folders and photo.params file). ')
		if operation == 'PURGE':
			print '\nYour funeral, buddy.'
			purge(location)
			pyclean(scriptloc)
			sys.exit('\nAnalysis directory ({}) purged of all Phobos activity (excluding /backups folder). /fits folder and photometry.txt file still exist. ')
		else:
			pyclean(scriptloc)
			sys.exit('\nExiting Phobos. Did NOT purge.')
	else:
		pyclean(scriptloc)
		sys.exit('\nExiting Phobos')
else:
	pyclean(scriptloc)
	sys.exit('\nNot a selection')